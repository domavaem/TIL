<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://domavaem.github.io/TIL/feed.xml" rel="self" type="application/atom+xml" /><link href="https://domavaem.github.io/TIL/" rel="alternate" type="text/html" /><updated>2022-02-07T17:29:12+09:00</updated><id>https://domavaem.github.io/TIL/feed.xml</id><title type="html">TIL</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">초기 설치</title><link href="https://domavaem.github.io/TIL/react/2022/02/04/install.html" rel="alternate" type="text/html" title="초기 설치" /><published>2022-02-04T10:27:35+09:00</published><updated>2022-02-04T10:27:35+09:00</updated><id>https://domavaem.github.io/TIL/react/2022/02/04/install</id><content type="html" xml:base="https://domavaem.github.io/TIL/react/2022/02/04/install.html"><![CDATA[<h3 id="react">React</h3>

<p>일단은 그냥 CRA 사용</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npx create-react-app [project name]
cd [project name]
npm install react-router-dom@6
</code></pre></div></div>

<p>타입스크립트 기반 CRA</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npx create-react-app [project name] --template typescript
</code></pre></div></div>

<h3 id="mobx">mobx</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install mobx

npm install mobx-react
npm install mobx-react-lite // 함수형 컴포넌트만 지원
</code></pre></div></div>

<h3 id="axios">axios</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install axios
</code></pre></div></div>

<h3 id="styled-components">styled-components</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install styled-components
</code></pre></div></div>

<h3 id="mui">mui</h3>

<p>emotion 사용이 default</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install @mui/material @emotion/react @emotion/styled
</code></pre></div></div>

<p>styled-components를 사용한다면 아래 버전 설치</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install @mui/material @mui/styled-engine-sc styled-components
</code></pre></div></div>

<h1 id="그-밖에-자주-쓰이는-패키지들">그 밖에 자주 쓰이는 패키지들</h1>

<h3 id="bcrypt">bcrypt</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install bcryptjs
</code></pre></div></div>]]></content><author><name></name></author><category term="react" /><summary type="html"><![CDATA[React 일단은 그냥 CRA 사용 npx create-react-app [project name] cd [project name] npm install react-router-dom@6 타입스크립트 기반 CRA npx create-react-app [project name] --template typescript mobx npm install mobx npm install mobx-react npm install mobx-react-lite // 함수형 컴포넌트만 지원 axios npm install axios styled-components npm install styled-components mui emotion 사용이 default npm install @mui/material @emotion/react @emotion/styled styled-components를 사용한다면 아래 버전 설치 npm install @mui/material @mui/styled-engine-sc styled-components 그 밖에 자주 쓰이는 패키지들 bcrypt npm install bcryptjs]]></summary></entry><entry><title type="html">리액트 메모</title><link href="https://domavaem.github.io/TIL/react/2022/01/26/memo.html" rel="alternate" type="text/html" title="리액트 메모" /><published>2022-01-26T10:27:35+09:00</published><updated>2022-01-26T10:27:35+09:00</updated><id>https://domavaem.github.io/TIL/react/2022/01/26/memo</id><content type="html" xml:base="https://domavaem.github.io/TIL/react/2022/01/26/memo.html"><![CDATA[<p>reducer 안에서 state를 바꾸고 리턴하지 말고<br />
state를 복사-&gt;수정-&gt; 수정된 값을 반환<br />
Object.assign, …imutable 라이브러리, …<br />
event.preventDefault(); //기본 동작 막기. a태그의 기본 동작 방지 등의 목적<br />
Create React App - Proxy</p>

<hr />

<p>props를 통해 컴포넌트에 값 전달</p>

<p>useState()로 컴포넌트에서 사용하는 값 관리</p>

<p>합수형 업데이트: 최적화</p>

<p>input 상태 관리 시 value도 업데이트</p>

<p>React에서는 객체를 직접 업데이트 하지 말고 새로운 객체를 할당</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">setInputs</span><span class="p">({</span>
  <span class="p">...</span><span class="nx">inputs</span><span class="p">,</span>
  <span class="p">[</span><span class="nx">name</span><span class="p">]:</span> <span class="nx">value</span><span class="p">,</span>
<span class="p">});</span>
</code></pre></div></div>

<p>useRef 로 특정 DOM 접근<br />
map 사용 시 key 설정</p>

<p>useRef로 만들어진 객체는 React가 만든 전역 저장소에 저장되기 때문에 함수를 재 호출하더라도 마지막으로 업데이트한 current 값이 유지<br />
useRef로 관리되는 변수는 값이 바뀌어도 컴포넌트가 리렌더링 되지 않음</p>

<hr />

<p>React.memo 사용 시<br />
eps 에 users 가 들어있기 때문에 배열이 바뀔때마다 함수가 새로 만들어지는건, 당연합니다.</p>

<p>그렇다면! 이걸 최적화하고 싶다면 어떻게해야 할까요?</p>

<p>바로 deps 에서 users 를 지우고, 함수들에서 현재 useState 로 관리하는 users 를 참조하지 않게 하는것입니다. 그건 또 어떻게 할까요? 힌트는, useState 를 배울때 다뤘던 내용이에요.</p>

<p>정답은 바로, 함수형 업데이트입니다.</p>

<p>함수형 업데이트를 하게 되면, setUsers 에 등록하는 콜백함수의 파라미터에서 최신 users 를 참조 할 수 있기 때문에 deps 에 users 를 넣지 않아도 된답니다.</p>

<hr />

<p>라우팅 작업 확인할 때는 서버를 아예 재시작</p>]]></content><author><name></name></author><category term="react" /><summary type="html"><![CDATA[reducer 안에서 state를 바꾸고 리턴하지 말고 state를 복사-&gt;수정-&gt; 수정된 값을 반환 Object.assign, …imutable 라이브러리, … event.preventDefault(); //기본 동작 막기. a태그의 기본 동작 방지 등의 목적 Create React App - Proxy]]></summary></entry><entry><title type="html">Memo</title><link href="https://domavaem.github.io/TIL/memo/2022/01/25/memo.html" rel="alternate" type="text/html" title="Memo" /><published>2022-01-25T10:27:35+09:00</published><updated>2022-01-25T10:27:35+09:00</updated><id>https://domavaem.github.io/TIL/memo/2022/01/25/memo</id><content type="html" xml:base="https://domavaem.github.io/TIL/memo/2022/01/25/memo.html"><![CDATA[<p>반응형 웹 디자인 간단 자료</p>

<p>https://developers.google.com/web/fundamentals/design-and-ux/responsive/patterns?hl=ko
https://css-tricks.com/responsive-data-tables/
https://divante.com/blog/responsive-web-design-table-design/</p>

<p>웹플로우, 워드프레스, 이런데서도 디자인 참고 얼마든지 가능</p>

<hr />

<p>vscode 자동정렬 고장나면 확인<br />
Editor: Default Formatter<br />
플러터: Dart<br />
웹: Prettier.</p>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git fetch --tags --all
</code></pre></div></div>

<hr />

<p>디버그 모드에서 콘솔 출력 메세지 타입별 색상</p>]]></content><author><name></name></author><category term="memo" /><summary type="html"><![CDATA[반응형 웹 디자인 간단 자료]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://domavaem.github.io/TIL/jekyll/2022/01/25/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-01-25T10:27:35+09:00</published><updated>2022-01-25T10:27:35+09:00</updated><id>https://domavaem.github.io/TIL/jekyll/2022/01/25/welcome-to-jekyll</id><content type="html" xml:base="https://domavaem.github.io/TIL/jekyll/2022/01/25/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
<span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: YEAR-MONTH-DAY-title.MARKUP Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts "Hi, #{name}" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.]]></summary></entry><entry><title type="html">Install Jekyll on Mac</title><link href="https://domavaem.github.io/TIL/memo/2022/01/24/install-jekyll-on-mac.html" rel="alternate" type="text/html" title="Install Jekyll on Mac" /><published>2022-01-24T12:30:32+09:00</published><updated>2022-01-24T12:30:32+09:00</updated><id>https://domavaem.github.io/TIL/memo/2022/01/24/install-jekyll-on-mac</id><content type="html" xml:base="https://domavaem.github.io/TIL/memo/2022/01/24/install-jekyll-on-mac.html"><![CDATA[<p>ERROR: While executing gem … (Errno::ENOTEMPTY)
Directory not empty @ dir_s_rmdir - /Users/spo/.rbenv/versions/3.0.0/lib/ruby/gems/3.0.0/gems/bundler-2.3.5</p>

<p>incompatible library version - /Users/spo/.gem/ruby/3.0.0/gems/ffi-1.15.5/lib/ffi_c.bundle (LoadError)
cannot load such file – 3.0/ffi_c (LoadError)</p>

<p>$ gem pristine ffi
이걸로 안되면
$ gem uninstall ffi
$ gem install ffi</p>

<hr />

<p>rbenv 설치 후</p>

<h1 id="check-your-installation">Check your installation</h1>

<p>curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash
설치 확인하면 아래의 에러가 날 때
The directory `/Users/spo/.rbenv/shims’ must be present in PATH for rbenv to work.</p>

<p>해결법은
I added these lines at the end of my .zshrc file (for those of us who are using oh my zsh)</p>

<p>’# rbenv configuration</p>

<p>eval “$(rbenv init -)”
export RUBY_CONFIGURE_OPTS=”–with-openssl-dir=$(brew –prefix openssl@1.1)”</p>

<p>터미널 재실행 필수</p>

<hr />

<p>sudo gem install jekyll bundler</p>

<hr />

<h1 id="upgrade-just-rubygems-gems">Upgrade just RubyGems gems.</h1>

<p>gem update –system</p>

<h1 id="upgrade-all-global-gems">Upgrade all global gems.</h1>

<p>gem update</p>

<hr />

<p>webrick 로드 실패 에러
bundle add webrick으로 webrick을 추가</p>

<hr />

<p>baseurl: “/TIL”
대소문자 구분 안하면 어디선가 문제 생김. css 로드가 안된다든가…</p>]]></content><author><name></name></author><category term="memo" /><summary type="html"><![CDATA[ERROR: While executing gem … (Errno::ENOTEMPTY) Directory not empty @ dir_s_rmdir - /Users/spo/.rbenv/versions/3.0.0/lib/ruby/gems/3.0.0/gems/bundler-2.3.5 incompatible library version - /Users/spo/.gem/ruby/3.0.0/gems/ffi-1.15.5/lib/ffi_c.bundle (LoadError) cannot load such file – 3.0/ffi_c (LoadError) $ gem pristine ffi 이걸로 안되면 $ gem uninstall ffi $ gem install ffi rbenv 설치 후 Check your installation curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash 설치 확인하면 아래의 에러가 날 때 The directory `/Users/spo/.rbenv/shims’ must be present in PATH for rbenv to work. 해결법은 I added these lines at the end of my .zshrc file (for those of us who are using oh my zsh) ’# rbenv configuration eval “$(rbenv init -)” export RUBY_CONFIGURE_OPTS=”–with-openssl-dir=$(brew –prefix openssl@1.1)” 터미널 재실행 필수 sudo gem install jekyll bundler Upgrade just RubyGems gems. gem update –system Upgrade all global gems. gem update webrick 로드 실패 에러 bundle add webrick으로 webrick을 추가 baseurl: “/TIL” 대소문자 구분 안하면 어디선가 문제 생김. css 로드가 안된다든가…]]></summary></entry></feed>